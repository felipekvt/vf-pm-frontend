'use client';import {useState,useEffect} from 'react';export default function Landing(){const apiBase=process.env.NEXT_PUBLIC_API_BASE||'';const [loginOpen,setLoginOpen]=useState(false);const [signupOpen,setSignupOpen]=useState(false);const [orgOpen,setOrgOpen]=useState(false);const [user,setUser]=useState<{name:string}|null>(null);const [orgs,setOrgs]=useState<Array<{id:string,name:string}>>([]);const [orgName,setOrgName]=useState('');const [loginForm,setLoginForm]=useState({email:'',password:''});const [signupForm,setSignupForm]=useState({name:'',email:'',password:''});const [loading,setLoading]=useState(false);const [msg,setMsg]=useState<string|null>(null);useEffect(()=>{const t=localStorage.getItem('vfpm_token');if(!t||!apiBase)return;fetch(`${apiBase}/api/me`,{headers:{Authorization:`Bearer ${t}`}}).then(r=>r.ok?r.json():null).then(d=>{if(d){setUser({name:d.name});loadOrgs();}}).catch(()=>{});},[apiBase]);function token(){return localStorage.getItem('vfpm_token')||'';}function setToken(t:string){localStorage.setItem('vfpm_token',t);}async function post(path:string,body:any,auth=false){const res=await fetch(`${apiBase}${path}`,{method:'POST',headers:{'Content-Type':'application/json',...(auth?{Authorization:`Bearer ${token()}`}:{})},body:JSON.stringify(body)});if(!res.ok)throw new Error(await res.text());return res.json();}async function handleLogin(e:any){e.preventDefault();setLoading(true);setMsg(null);try{const data=await post('/api/auth/login',loginForm);setToken(data.token);setUser({name:data.name});setLoginOpen(false);await loadOrgs();setOrgOpen(true);}catch(err:any){setMsg(err.message||'Erro ao entrar');}finally{setLoading(false);}}async function handleSignup(e:any){e.preventDefault();setLoading(true);setMsg(null);try{const data=await post('/api/auth/signup',signupForm);setToken(data.token);setUser({name:data.name});setSignupOpen(false);await loadOrgs();setOrgOpen(true);}catch(err:any){setMsg(err.message||'Erro ao criar conta');}finally{setLoading(false);}}async function loadOrgs(){const data=await fetch(`${apiBase}/api/orgs`,{headers:{Authorization:`Bearer ${token()}`}}).then(r=>r.ok?r.json():[]);setOrgs(data);}async function createOrg(e:any){e.preventDefault();setLoading(true);setMsg(null);try{await post('/api/orgs',{name:orgName},true);setOrgName('');await loadOrgs();}catch(err:any){setMsg(err.message||'Erro');}finally{setLoading(false);}}async function selectOrg(id:string){const data=await post('/api/orgs/select',{orgId:id},true);setToken(data.token);window.location.href='/dashboard';}return(<div className='min-h-screen'><header className='border-b bg-white/70 backdrop-blur'><div className='mx-auto max-w-6xl p-4 flex items-center justify-between'><div className='flex items-center gap-2'><div className='h-8 w-8 rounded-xl bg-slate-900 text-white grid place-items-center font-bold'>V</div><span className='font-semibold'>VF PM</span></div><div className='flex items-center gap-3'>{user?(<><a href='/dashboard' className='px-4 py-2 rounded-xl border'>Dashboard</a><button onClick={()=>{localStorage.removeItem('vfpm_token');location.reload();}} className='text-sm'>Sair</button></>):(<><button onClick={()=>setLoginOpen(true)} className='text-sm'>Entrar</button><button onClick={()=>setSignupOpen(true)} className='px-4 py-2 rounded-xl bg-slate-900 text-white text-sm'>Criar conta</button></>)}</div></div></header><main className='mx-auto max-w-6xl p-6'><h1 className='text-4xl font-extrabold'>Manutenção preditiva e CMMS em um só lugar.</h1><p className='mt-4 text-slate-600'>Crie uma conta, selecione sua empresa e acesse o dashboard.</p>{apiBase&&<div className='mt-2 text-xs text-slate-500'>API: <code>{apiBase}</code></div>}</main>{loginOpen&&(<div className='fixed inset-0 bg-black/40 grid place-items-center p-4'><div className='w-full max-w-md rounded-2xl bg-white p-6 shadow'><div className='flex justify-between items-center'><h3 className='font-semibold'>Entrar</h3><button onClick={()=>setLoginOpen(false)}>✕</button></div><form className='mt-4 grid gap-3' onSubmit={handleLogin}><input className='rounded-xl border px-3 py-2' placeholder='E-mail' type='email' required value={loginForm.email} onChange={e=>setLoginForm({...loginForm,email:e.target.value})}/><input className='rounded-xl border px-3 py-2' placeholder='Senha' type='password' required value={loginForm.password} onChange={e=>setLoginForm({...loginForm,password:e.target.value})}/><button disabled={loading} className='rounded-xl bg-slate-900 text-white px-4 py-2'>{loading?'Entrando...':'Entrar'}</button>{msg&&<div className='text-xs text-slate-600'>{msg}</div>}</form></div></div>)}{signupOpen&&(<div className='fixed inset-0 bg-black/40 grid place-items-center p-4'><div className='w-full max-w-md rounded-2xl bg-white p-6 shadow'><div className='flex justify-between items-center'><h3 className='font-semibold'>Criar conta</h3><button onClick={()=>setSignupOpen(false)}>✕</button></div><form className='mt-4 grid gap-3' onSubmit={handleSignup}><input className='rounded-xl border px-3 py-2' placeholder='Nome' required value={signupForm.name} onChange={e=>setSignupForm({...signupForm,name:e.target.value})}/><input className='rounded-xl border px-3 py-2' placeholder='E-mail' type='email' required value={signupForm.email} onChange={e=>setSignupForm({...signupForm,email:e.target.value})}/><input className='rounded-xl border px-3 py-2' placeholder='Senha' type='password' required value={signupForm.password} onChange={e=>setSignupForm({...signupForm,password:e.target.value})}/><button disabled={loading} className='rounded-xl bg-slate-900 text-white px-4 py-2'>{loading?'Enviando...':'Criar conta'}</button>{msg&&<div className='text-xs text-slate-600'>{msg}</div>}</form></div></div>)}{orgOpen&&user&&(<div className='fixed inset-0 bg-black/40 grid place-items-center p-4'><div className='w-full max-w-lg rounded-2xl bg-white p-6 shadow grid gap-4'><div className='flex justify-between items-center'><h3 className='font-semibold'>Selecione sua empresa</h3><button onClick={()=>setOrgOpen(false)}>✕</button></div><div className='grid gap-2'>{orgs.map(o=>(<button key={o.id} onClick={()=>selectOrg(o.id)} className='rounded-xl border px-3 py-2 text-left hover:bg-slate-50'>{o.name}</button>))}{orgs.length===0&&<div className='text-sm text-slate-600'>Nenhuma empresa ainda. Crie uma abaixo.</div>}</div><form className='grid gap-2' onSubmit={createOrg}><input className='rounded-xl border px-3 py-2' placeholder='Nome da empresa' value={orgName} onChange={e=>setOrgName(e.target.value)}/><button disabled={loading} className='rounded-xl bg-slate-900 text-white px-4 py-2'>{loading?'Criando...':'Criar empresa'}</button></form>{msg&&<div className='text-xs text-slate-600'>{msg}</div>}</div></div>)}</div>);}
